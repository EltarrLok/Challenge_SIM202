ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**2), add =T, col = "red")
a=-1
a**2
curve(dnorm(x,mean=m,sd =s**(-1/2), add =T, col = "red")
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
#plot(data$date<"2016-02-01", data$T1-data$T2, type = 'h')
#plot(data$date, data$T1-data$T2, type = 'h')
#selectByDate(
data,
start = "1/1/2016",
end = "01/02/2016",
year = 2016,
month = 1,
day = "weekday",
hour = 1
)
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(-1/2), add =T, col = "red")
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
#plot(data$date<"2016-02-01", data$T1-data$T2, type = 'h')
#plot(data$date, data$T1-data$T2, type = 'h')
#selectByDate(
data,
start = "1/1/2016",
end = "01/02/2016",
year = 2016,
month = 1,
day = "weekday",
hour = 1
)
curve(dnorm(x,mean=m,sd =s**(2), add =T, col = "red")
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
#plot(data$date<"2016-02-01", data$T1-data$T2, type = 'h')
#plot(data$date, data$T1-data$T2, type = 'h')
#selectByDate(
data,
start = "1/1/2016",
end = "01/02/2016",
year = 2016,
month = 1,
day = "weekday",
hour = 1
)
curve(dnorm(x,mean=m,sd =s**(2), add =T, col = "red")
curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
#plot(data$date<"2016-02-01", data$T1-data$T2, type = 'h')
#plot(data$date, data$T1-data$T2, type = 'h')
#selectByDate(
data,
start = "1/1/2016",
end = "01/02/2016",
year = 2016,
month = 1,
day = "weekday",
hour = 1
)
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**2), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2), add =T, col = "red")
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
#plot(data$date<"2016-02-01", data$T1-data$T2, type = 'h')
#plot(data$date, data$T1-data$T2, type = 'h')
#selectByDate(
data,
start = "1/1/2016",
end = "01/02/2016",
year = 2016,
month = 1,
day = "weekday",
hour = 1
)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
#histo du min au max avec pas de 10 trinqué à 200
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F,
xlim=c(0,200),ylim=c(0,3000))
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/4)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
h$counts
s = max(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
#histo du min au max avec pas de 10 tronqué à 200
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F,
xlim=c(0,200),ylim=c(0,3000))
eaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
#histo du min au max avec pas de 10 tronqué à 200
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F,
xlim=c(0,200),ylim=c(0,3000))
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
h$counts
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
print(dnorm(x,mean=0,sd =1))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
print(dnorm(x,mean=0,sd =1))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
plot(dnorm(x,mean=0,sd =1))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
plot(rnorm(x,mean=0,sd =1))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(rnorm(x,mean=0,sd =1))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(dnorm(x,mean=0,sd =1))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(dnorm(x,mean=0,sd =1), add=TRUE)
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(dnorm(x,mean=0,sd =1), add=TRUE)
#histo du min au max avec pas de 10 tronqué à 200
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F,
xlim=c(0,200),ylim=c(0,3000))
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(dnorm(x,mean=0,sd =1), add=TRUE)
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
#curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(dnorm(x,mean=0,sd =1), add=TRUE)
t.seed(3000)
xseq<-seq(-4,4,.01)
densities<-dnorm(xseq, 0,1)
cumulative<-pnorm(xseq, 0, 1)
randomdeviates<-rnorm(1000,0,1)
par(mfrow=c(1,3), mar=c(3,4,4,2))
plot(xseq, densities, col="da
plot(xseq, densities, col="darkgreen",xlab="", ylab="Density", type="l",lwd=2, cex=2, main="PDF of Standard Normal", cex.axis=.8)
curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
h$counts
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
#h$counts
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(-1/3)), add =T, col = "red")
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
#h$counts
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
#histogram avec 40 marches
hist(cons,breaks =40,main="Frequence des consomations",xlab="Quantités Consommées",
ylab="Frequence",col="green",proba=T)
h<-hist(cons,breaks =40,plot =FALSE)
#h$counts
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
#h$counts
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/8)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(8)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(2)), add =T, col = "red")
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
h$counts
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
s = sd(h$counts)
m=min(cons)+which.max(h$counts)*10
curve(dnorm(x,mean=m,sd =s**(2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**2), add =T, col = "red")
s**2
s = max(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s**2), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2), add =T, col = "red")
curve(dnorm(x,mean=mean(cons),sd =sd(cons)), add =T, col = "red")
#plot(data$date<"2016-02-01", data$T1-data$T2, type = 'h')
#plot(data$date, data$T1-data$T2, type = 'h')
#selectByDate(
data,
start = "1/1/2016",
end = "01/02/2016",
year = 2016,
month = 1,
day = "weekday",
hour = 1
)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=F)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/3)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/8)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
graphics.off()
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
h$counts
s = max(h$counts)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
###############################
#### Régression linéaire
###############################
rm(list=objects());
graphics.off()
df=read.table("hFE.csv",header =TRUE, dec=",",sep=";")
## Impose le repertoire courant.
setwd("~/Documents/ENSTA/STA201/") # à personnaliser
## Supprime toutes les variables dans l'environnement.
rm(list=objects())
## Supprime les graphiques.
graphics.off()
## Impose le repertoire courant.
setwd("~/Documents/ENSTA/STA201/") # à personnaliser
###############################
#### Régression linéaire
###############################
rm(list=objects());
graphics.off()
df=read.table("hFE.csv",header =TRUE, dec=",",sep=";")
## importation des data
df=read.table("hFE.csv",sep=";",dec=",",header=TRUE)
df=read.table("hFE.csv",header =TRUE, dec=",",sep=";")
head(df,10) ## base de donnees avec des noms de variables
print(df)
dim(df)
str(df)
## Renommer la derniere variable
names(df)
names(df)[4]='etr'
## Renommer la derniere variable
names(df)
summary(df)
## scatter plot
pairs(df)  ## relation lineaire entre y et les x_i
?pairs
round(cor(df),3)
cor(df)
corrplot(cor(df))
## matrice de correlation avec le package corrplot
library(corrplot)
corrplot(cor(df))
install.packages("GGally")
library(GGally)
ggpairs(df)
rm(list = objects())
graphics.off()
setwd("/home/lokmen/Documents/ENSTA/SIM202/building-appliances/")   # set working directory
library(readr)
data <- read_delim("train.csv", col_names = TRUE, delim = ",")
attach(data)
cons =data$Appliances
h<-hist(cons,breaks =seq(min(cons),max(cons),by=10),plot =FALSE)
h$counts
s = max(h$counts)
s=m(cons)
m=min(cons)+which.max(h$counts)*10
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s)), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
graphics.off()
# hist du min au max avec pas de 10
hist(cons,breaks =seq(min(cons),max(cons),by=10),main="Frequence des consomations",
xlab="Quantités Consommées", ylab="Frequence",col="green",proba=T)
curve(dnorm(x,mean=m,sd =s), add =T, col = "red")
curve(dnorm(x,mean=m,sd =s**(1/2)), add =T, col = "red")
## Supprime toutes les variables dans l'environnement.
rm(list=objects())
## Supprime les graphiques.
graphics.off()
## Impose le repertoire courant.
setwd("~/Documents/ENSTA/STA201/") # à personnaliser
df=read.table("hFE.csv",header =TRUE, dec=",",sep=";")
## Renommer la derniere variable
names(df)
names(df)[4]='etr'
## scatter plot
pairs(df)  ## relation lineaire entre y et les x_i
corrplot(cor(df))
corrplot(cor(df),method = "square")
corrplot(cor(df),method = "number")
corrplot(cor(df),method = "number",type="upper")
cor(df)
round(cor(df),3)
round(cor(df),4)
corrplot(cor(df),method = "number",type="upper",col = c("black", "white"), bg = "lightblue")
corrplot(cor(df),method = "number",type="upper",col = c("black", "white","green"), bg = "lightblue")
corrplot(cor(df),method = "number",type="upper",col = c("black", "white","blue"), bg = "lightblue")
corrplot(cor(df),method = "number",type="upper",col = c("black", "white","grey"), bg = "lightblue")
corrplot(cor(df),method = "number",type="upper",col = c("black", "white","lightblue"), bg = "grey")
corrplot(cor(df),method = "number",type="upper",, bg = "grey")
corrplot(cor(df),method = "number",type="upper", bg = "grey")
corrplot(cor(df),method = "number",type="upper", bg = "black")
corrplot(cor(df),method = "number",type="upper", bg = "lightbelue")
corrplot(cor(df),method = "number",type="upper", bg = "lightblue")
?pairsq
?pairs
corrplot(cor(df),method = "number",type="upper", bg = "lightblue")
## scatter plot
pairs(df)  ## relation lineaire entre y et les x_i
ggpairs(df)
?rnorm
## scatter plot
pairs(df)  ## relation lineaire entre y et les x_i
set.seed(525354)                       # Set seed for reproducibility
N <- 1000                              # Sample size of 1000
x1 <- rnorm(N)                         # Create variable
x2 <- x1 + rnorm(N, 0, 3)              # Create correlated variable
x3 <- 2 * x1 - x2 + rnorm(N, 0, 2)     # Create another correlated variable
data <- data.frame(x1, x2, x3)
pairs(data)
pairs(~ x1 + x3, data = data)
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 18,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 1800,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 180,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 18,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 18,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 0,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 100,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
pairs(data[ , 1:3],
col = "red",                                         # Change color
pch = 0,                                            # Change shape of points
labels = c("var1", "var2", "var3"),                  # Change labels of diagonal
main = "This is a nice pairs plot in R")
graphics.off()
group <- NA
group[data$x1 < - 0.5] <- 1
group <- NA
group[data$x1 < - 0.5] <- 1
group <- NA
group[data$x1 < - 0.5] <- 1
group[data$x1 >= - 0.5 & data$x1 <= 0.5] <- 2
group[data$x1 > 0.5] <- 3
pairs(data[ , 1:3],
col = c("red", "cornflowerblue", "purple")[group],   # Change color by group
pch = c(8, 18, 1)[group],                            # Change points by group
labels = c("var1", "var2", "var3"),
main = "This is an even nicer pairs plot in R")
corrplot(cor(df),method = "number",type="upper", bg = "lightblue")
## scatter plot
pairs(df)  ## relation lineaire entre y et les x_i
round(cor(df),4)
#pour lire le fichier, on selectionne les lignes de codes que l'on veut run et on fait ctrl + entree
#import
rm()#comme clear all, met a jour des var
setwd("Téléchargements")
setwd("/home/lokmen/Téléchargements")
train<-read.csv("train.csv",header=TRUE)
#pour lire le fichier, on selectionne les lignes de codes que l'on veut run et on fait ctrl + entree
#import
rm()#comme clear all, met a jour des var
setwd("/home/lokmen/Documents/ENSTA/SIM202/building-appliances/")
train<-read.csv("train.csv",header=TRUE)
plot(train$date,train$T1)
summary(train)#On regarde ou sont les valeurs manquantes
trainbis=na.omit(train)
df=cbind(trainbis$RH_1,trainbis$RH_2,trainbis$RH_3,trainbis$RH_4,trainbis$RH_5,trainbis$RH_6,trainbis$RH_7,trainbis$RH_8,trainbis$RH_9,trainbis$RH_out)
summary(df)
library(corrplot)
corrplot(cor(df))
X=cbind(trainbis$RH_3,trainbis$RH_8,trainbis$RH_out)
X
#summary(df)
Y=as.matrix(trainbis$RH_6)
theta.est=solve(t(X)%*%X)%*% t(X)%*%Y
theta.est
resL=lm(trainbis$RH_6~trainbis$RH_1+trainbis$RH_2+trainbis$RH_3+trainbis$RH_4+trainbis$RH_5+trainbis$RH_7+trainbis$RH_8+trainbis$RH_9+trainbis$RH_out)
library(tidyverse)
library(lubridate)
library(ranger)
train <- read.csv(file="train.csv", sep=",", dec='.')
test <- read.csv(file="test.csv", sep=",", dec='.')
Date_train = as.POSIXct(strptime(train$date, "%Y-%m-%d %H:%M:%S",tz="GMT"))
Date_test=as.POSIXct(strptime(test$date, "%Y-%m-%d %H:%M:%S"))
length(Date_train)
manquant_train=na.omit(Date_train)
length(manquant_train)
